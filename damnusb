#!/usr/bin/env bash

OPTERR=0

rulename=""
listname=""

ports=()
attrs=()

usage()
{
  echo "$0:
  damnusb [OPTIONS]
    
  OPTIONS:
    -h                                   show help
    -l rule/usb                          show a list of rules or USB ports
    -c <rulename>                        create a rule to disable USB ports
    -d <rulename>                        delete a rule to disable USB ports
    -s <rulename>                        stop a rule to disable USB ports
    -r <rulename>                        run a rule to disable USB ports
    
    -p <usb_port1>,<usb_port2>...        specify USB ports (default all USB ports)
    -a <sysfs_attr1>,<sysfs_attr2>...    specify USB device attributes (default all USB devices)"
}

rule()
{
  echo -n "SUBSYSTEM==\"usb\""
  if [ -n "$1" ]; then
    echo -n ", KERNEL==\"$1\""
  fi
  while [ -n "$2" ]; do
    IFS='=' read -r attr val <<< "$2"
    shift 1
    [ -z "$val" ] && continue
    echo -n ", ATTR{$attr}!=\"$val\""
  done
  echo ", ATTR{authorized}=\"0\""
}

OPTIND=1
  
while getopts "h:l:c:d:s:r:" opt; do
  case "$opt" in
    h)
      usage
      exit 0
      ;;
    l)
      listname="$OPTARG"
      
      case "$listname" in
        rule)
          ls /etc/udev/rules.d/
          exit 0
          ;;
        usb)
          lsusb
          exit 0
          ;;
        *)
          usage >&2
          exit 1
          ;;
      esac
      ;;
    c)
      rulename="$OPTARG"
      
      while getopts "p:a:" opt; do
        case "$opt" in
          p)
            IFS=',' read -ra ports <<< "$OPTARG"
            ;;
          a)
            IFS=',' read -ra attrs <<< "$OPTARG"
            ;;
          *)
            ;;
        esac
      done
      
      if [ -z "${ports[*]}" ]; then
        nports="*"
      else
        nports="${ports[*]}"
      fi
      if [ -z "${attrs[*]}" ]; then
        nattrs="*"
      else
        nattrs="${attrs[*]}"
      fi
      
      if [ -z "${ports[*]}" ]; then
        rule "" "${attrs[@]}" >/etc/udev/rules.d/"$rulename".rules
      else
        for port in "${ports[@]}"; do
          rule "$port" "${attrs[@]}"
        done >/etc/udev/rules.d/"$rulename".rules
      fi && echo "damnusb: create rule $rulename"
      ;;
    d)
      rulename="$OPTARG"      
      if rm /etc/udev/rules.d/"$rulename".rules; then
        echo "damnusb: delete rule $rulename"
      fi
      ;;
    s)
      rulename="$OPTARG"
      if mv /etc/udev/rules.d/"$rulename".rules /etc/udev/rules.d/"$rulename".rules.disable; then
        echo "damnusb: stop rule $rulename"
      fi
      ;;
    r)
      rulename="$OPTARG"
      if mv /etc/udev/rules.d/"$rulename".rules.disable /etc/udev/rules.d/"$rulename".rules; then
        echo "damnusb: run rule $rulename"
      fi
      ;;
    *)
      usage >&2
      exit 1
      ;;
  esac
done

udevadm control --reload && udevadm trigger
